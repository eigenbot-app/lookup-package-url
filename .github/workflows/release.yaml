# Generated by eigenbot-app/generate-go-action; DO NOT EDIT.
name: Release
on:
  push:
    branches:
      - main
      - master # Support legacy default branches.
    paths:
      - '**.go'
      - '**.mod'
      - '**.sum'
      - .github/workflows/release.yaml
  # Allow manual releases off any branch.
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - id: token
        name: Get Access Token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ vars.RELEASE_BOT_APP_ID }}
          private_key: ${{ secrets.RELEASE_BOT_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ steps.token.outputs.token }}
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
      - name: Compile Package
        run: |-
          cd . && \
          mkdir -p bin && \
          go build -ldflags="-w -s" -o bin/lookup-package-url ./
        env:
          GOPRIVATE: github.com/eigenbot-app
          CGO_ENABLED: 0
          GOOS: linux
          GOARCH: amd64
      - id: tag
        name: Determine Release Tag
        run: echo "name=lookup-package-url-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Push Release Tag
        run: |-
          git config --global user.password ${{ steps.token.outputs.token }}
          git tag -d ${{ steps.tag.outputs.name }} 2> /dev/null || echo 'local ref does not exist'
          git push origin :${{ steps.tag.outputs.name }} 2> /dev/null || echo 'remote ref does not exist'
          git tag ${{ steps.tag.outputs.name }}
          git push origin ${{ steps.tag.outputs.name }}
      - id: release
        name: Create Release
        run: |-
          gh release create \
            ${{ steps.tag.outputs.name }} \
            --title "${{ steps.tag.outputs.name }}" \
            --notes "Binary release of \`lookup-package-url\` at revision \`${{ github.sha }}\`." \
            --verify-tag
        env:
          GH_TOKEN: ${{ steps.token.outputs.token }}
      - name: Upload Asset
        run: |
          gh release upload \
            ${{ steps.tag.outputs.name }} \
            bin/lookup-package-url \
            --clobber
        env:
          GH_TOKEN: ${{ steps.token.outputs.token }}
